#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import mysql.connector

from sys import exit

# TODO
#
# Faire apparaitre les arguments optionnels et les arguments obligatoires
# Fonction qui va faire l'optimize sur toutes les tables d'une base
# Fonction qui va récupérer la liste des bases de données du serveur
# Fonction qui va boucler sur toutes les bases de données et faire les optimize 

# FONCTIONS
def getAllDatabases(cnx):
	''' 
		Function that retrieves the names of all
		databases these are on the server and returns 
		a list of these names

	    Parameter : mysql.connector.connect() cnx
	    Return : str list
	'''

def optimizeDatabase(cnx):
	'''
		Function which will launch optimize on
		all tables in the database specified in
		args (via sql connection)

	    Parameter : mysql.connector.connect() cnx
	    Return : True if OK, false if not
	'''

def optimizeAllDatabases(sqlUser, sqlPassword, allDatabases):
	'''
		Function which will launch optimize on
		all tables in all server's databases

		Parameter : str sqlUser
		Parameter : str sqlPassword
		Parameter : str allDatabases
		Return : True if OK, false if not
	'''

def msg(text):
	'''
		Message display function
	'''
	print("[OPTIMIZER] " + msg)

# PROGRAMME PRINCIPAL
parser = argparse.ArgumentParser(description="mysqloptimizer automates the optimization of your databases.")
parser.add_argument('-u', '--user', help='SQL user')
parser.add_argument('-p', '--password', help='SQL password')
parser.add_argument('-a', '--all', help='Optimize all tables of all databases')
parser.add_argument('-d', '--database', help='Database you want to optimize')
parser.add_argument('-v', '--version', action='store_true', help='Print version and exit')

args = vars(parser.parse_args())
version = '0.02'

if args['version']:
    print(version)
    exit(0)

if not args['user'] or not args['password']:
    parser.print_help()
    exit(1)

user = args['user']
password = args['password'] 

if args['all']:
	if not optimizeAllDatabases(user, password, getAllDatabases()):
		exit(1)
	
elif args['database']:
	database = args['database']
	cnx = mysql.connector.connect(user=user, password=password, host='127.0.0.1', database=database)
	if not optimizeDatabase(cnx):
		exit(1)
else:
	parser.print_help()
	exit(1)

exit(0)
